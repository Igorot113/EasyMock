package test;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.easymock.EasyMock;
import org.junit.jupiter.api.Test;

import interPagamento.Pagamento;
import interPagamento.ProcessarCartao;

public class PagamentoTest {
	@Test
	void testPagementoAprovado() {
		ProcessarCartao mock = EasyMock.createMock(ProcessarCartao.class);
		EasyMock.expect(mock.cobrar("1234", 100.0)).andReturn(true);
		EasyMock.replay(mock);
		Pagamento pagamento = new Pagamento(mock);
		assertTrue(pagamento.pagar("1234", 100.0));
		EasyMock.verify(mock);
	}

	@Test
	void testPagamentoRecusado() {
		ProcessarCartao mock = EasyMock.createMock(ProcessarCartao.class);
		EasyMock.expect(mock.cobrar("9999", 50.0)).andReturn(false);
		EasyMock.replay(mock);
		Pagamento pagamento = new Pagamento(mock);
		assertFalse(pagamento.pagar("9999", 50.0));
		EasyMock.verify(mock);
	}

	@Test
	void testErroNoProcessador() {
		ProcessarCartao mock = EasyMock.createMock(ProcessarCartao.class);
		EasyMock.expect(mock.cobrar("7777", 200.0)).andThrow(new RuntimeException("Falha_no_sistema"));
		EasyMock.replay(mock);
		Pagamento pagamento = new Pagamento(mock);
		assertThrows(RuntimeException.class, () -> {
			pagamento.pagar("7777", 200.0);
		});
	}
}
